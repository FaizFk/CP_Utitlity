const int MOD = 1e9 + 7;
const int mxm = 2e5 + 12;

vector<ll> factorial;
vector<ll> invFactorial;

int powOpt(int x, int p)
{
    if (p == 0)
        return 1;
    ll ans = powOpt(x, p / 2);
    (ans *= ans) %= MOD;
    if (p & 1)
        (ans *= x) %= MOD;
    return ans;
}

void setFact(int mxm = mxm)
{
    factorial.assign(mxm, 0);
    invFactorial.assign(mxm, 0);
    factorial[0] = 1;
    invFactorial[0] = 1;
    for (int i = 1; i < mxm; i++)
    {
        factorial[i] = i * factorial[i - 1] % MOD;
        invFactorial[i] = powOpt(factorial[i], MOD - 2);
    }
}

int nCr(int n, int r)
{
    if (r > n)
        return 0;

    ll ans = invFactorial[r] * invFactorial[n - r] % MOD;
    (ans *= factorial[n]) %= MOD;

    return ans;
}
